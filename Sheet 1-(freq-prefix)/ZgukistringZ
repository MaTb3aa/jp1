/***  بسم الله الرحمن ا لرحيم   ***/

#define _CRT_SECURE_NO_WARNINGS

#include<bits/stdc++.h>

#include<unordered_map>

#define endl                         '\n'

#define Ceil(x,y)             ((x+y-1)/y)

#define sz(s)               (int)s.size()

#define RT(x)           return cout<<x,0;

#define mem(x,y)    memset(x,y,sizeof(x))

#define all(v) ((v).begin()), ((v).end())

#define watch(x) cout<<#x<<" = { "<<x<<" }\n"

#define test int t;cin>>t;while(t--)

const int dx[] = { 0, 1, 0, -1, 1, 1, -1, -1 };

const int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };

const double PI = acos(-1), EPS = 1e-7;

const int OO = 0x3f3f3f3f, N = 1e6 + 5, mod = 1e9 + 7;

using namespace std;

typedef long long ll;

typedef unsigned long long ull;

ll gcd(ll x, ll y) { return (!y) ? x : gcd(y, x % y); }

ll lcm(ll x, ll y) { return ((x / gcd(x, y)) * y); }

void file() {

#ifndef ONLINE_JUDGE

	freopen("input.txt", "r", stdin);	freopen("output.txt", "w", stdout);

#endif  !ONLINEJUDGE

	ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);

}

string s, a, b;

int n, arr[26], arra[26], arrb[26], mini, mini2, aa, bb;

int main() {

	file();

    cin >> s >> a >> b;

    n = s.size();

    for (int i = 0; i < n; ++i)++arr[s[i] - 'a'];

    n = a.size();

    for (int i = 0; i < n; ++i)++arra[a[i] - 'a'];

    n = b.size();

    for (int i = 0; i < n; ++i)++arrb[b[i] - 'a'];

    while (true) {

        mini = mini2 = INT_MAX;

        for (int i = 0; i < 26; ++i) {

            if (arra[i])mini = min(mini, arr[i] / arra[i]);

            if (arrb[i])mini2 = min(mini2, arr[i] / arrb[i]);

        }

        if ((mini == INT_MAX || !mini) && (mini2 == INT_MAX || !mini2))break;

        if (mini > mini2) {

            aa++;

            for (int i = 0; i < 26; ++i)arr[i] -= arra[i];

        }

        else {

            bb++;

            for (int i = 0; i < 26; ++i)arr[i] -= arrb[i];

        }

    }

    while (aa--)cout << a;

    while (bb--)cout << b;

    for (int i = 0; i < 26; ++i)

        while (arr[i]--)cout << char(i + 'a');

	return 0;

}
