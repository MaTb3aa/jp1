/***  بسم الله الرحمن ا لرحيم   ***/

#define _CRT_SECURE_NO_WARNINGS

#include<bits/stdc++.h>

#include<unordered_map>

#define endl                         '\n'

#define Ceil(x,y)             ((x+y-1)/y)

#define sz(s)               (int)s.size()

#define RT(x)           return cout<<x,0;

#define mem(x,y)    memset(x,y,sizeof(x))

#define all(v) ((v).begin()), ((v).end())

#define watch(x) cout<<#x<<" = { "<<x<<" }\n"

#define test int t;cin>>t;while(t--)

const int dx[] = { 0, 1, 0, -1, 1, 1, -1, -1 };

const int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };

const double PI = acos(-1), EPS = 1e-7;

const int OO = 0x3f3f3f3f, N = 4e6 + 5, mod = 1e9 + 7;

using namespace std;

typedef long long ll;

typedef unsigned long long ull;

ll gcd(ll x, ll y) { return (!y) ? x : gcd(y, x % y); }

ll lcm(ll x, ll y) { return ((x / gcd(x, y)) * y); }

void file() {

#ifndef ONLINE_JUDGE

 freopen("input.txt", "r", stdin);

	

	//freopen("output.txt", "w", stdout);

#endif  !ONLINEJUDGE

	ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);

}

vector<string>vv;

int n, idx = 0, st;

string s, temp, dir[10000];

void solve() {

	test{

		cin >> s;

		if (s == "pwd")

		{

			cout << "/";

			for (int i = 0; i < idx; i++)cout << dir[i] << "/";

			cout << endl;

		}

		else {

			cin >> s;

			st = 0;

			if (s[0] == '/')st = 1, idx = 0;

			temp = "";

			for (int i = st; i < s.length(); i++)

			{

				if (s[i] != '/')temp += s[i];

				if (s[i] == '/' || i == s.length() - 1)

				{

					if (temp == "..")idx--;

					else dir[idx++] = temp;

					temp = "";

				}

			}

		}

	}

}

int main() {

	file();

	solve();

	return 0;

}
