/***  بسم الله الرحمن ا لرحيم   ***/

#define _CRT_SECURE_NO_WARNINGS

#include<bits/stdc++.h>

#include<unordered_map>

#define endl                         '\n'

#define Ceil(x,y)             ((x+y-1)/y)

#define sz(s)               (int)s.size()

#define RT(x)           return cout<<x,0;

#define mem(x,y)    memset(x,y,sizeof(x))

#define all(v) ((v).begin()), ((v).end())

#define watch(x) cout<<#x<<" = { "<<x<<" }\n"

#define test int t;cin>>t;while(t--)

const int dx[] = { 0, 1, 0, -1, 1, 1, -1, -1 };

const int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };

const double PI = acos(-1), EPS = 1e-7;

const int OO = 0x3f3f3f3f, N = 4e6 + 5, mod = 1e9 + 7;

using namespace std;

typedef long long ll;

typedef unsigned long long ull;

ll gcd(ll x, ll y) { return (!y) ? x : gcd(y, x % y); }

ll lcm(ll x, ll y) { return ((x / gcd(x, y)) * y); }

void file() {

#ifndef ONLINE_JUDGE

	freopen("input.txt", "r", stdin);	//freopen("output.txt", "w", stdout);

#endif  !ONLINEJUDGE

	ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);

}

int n, m;

deque<int> dq;

int A[1 << 20], B[1 << 20], s;

void work() {

	int mx = *max_element(dq.begin(), dq.end());

	for (s = 1; dq[0] != mx; s++) {

		A[s] = dq[0]; dq.pop_front();

		B[s] = dq[0]; dq.pop_front();

		dq.push_front(max(A[s], B[s]));

		dq.push_back(min(A[s], B[s]));

	}

}

void solve() {

	scanf("%d %d", &n, &m);

	for (int i = 0; i < n; i++) {

		int x; scanf("%d", &x);

		dq.push_back(x);

	}

	work();

	while (m--) {

		long long q; scanf("%lld", &q);

		if (q < s) printf("%d %d\n", A[q], B[q]);

		else {

			q -= s;

			q %= n - 1;

			printf("%d %d\n", dq[0], dq[1 + q]);

		}

	}

	

}

int main() {

	file();

	solve();

	return 0;

}
